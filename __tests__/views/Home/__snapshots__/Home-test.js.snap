// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home screen: Snapshot Testing renders correctly when success callback with all the required params in response 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F3F3F3",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "marginBottom": 20,
          }
        }
      >
        <RCTScrollView
          contentContainerStyle={
            Object {
              "paddingBottom": 50,
            }
          }
          data={
            Object {
              "description": "test",
              "title": "test",
            }
          }
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View />
        </RCTScrollView>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#8F8FFF",
            "bottom": 0,
            "height": 70,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#FFFFFF",
              "fontFamily": "Avenir-Medium",
              "fontSize": 20,
            }
          }
        >
          ADD
        </Text>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;
